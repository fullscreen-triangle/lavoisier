[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-rust", "pyo3-build-config"]
build-backend = "setuptools.build_meta"

[project]
name = "lavoisier"
version = "0.1.0"
description = "Advanced LC-Mass Spectrometry Analysis with AI Integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Kundai Sachikonye", email = "kundai.f.sachikonye@gmail.com"}
]
maintainers = [
    {name = "Kundai Sachikonye", email = "kundai.f.sachikonye@gmail.com"}
]
keywords = [
    "mass-spectrometry", 
    "bioinformatics", 
    "metabolomics", 
    "proteomics", 
    "machine-learning",
    "computer-vision",
    "ai",
    "rust-acceleration"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    # Core dependencies
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "networkx>=2.8.0",
    
    # Mass Spectrometry and Data Processing
    "h5py>=3.8.0",
    "zarr>=2.15.0",
    "pymzml>=2.5.0",
    "rdkit>=2023.0.0",
    "numcodecs>=0.10.0",
    
    # Similarity Search & Vector DB
    "faiss-cpu>=1.7.0",
    "annoy>=1.17.0",
    "hnswlib>=0.7.0",
    
    # Parallel and Distributed Computing
    "dask>=2023.0.0",
    "distributed>=2023.0.0",
    "ray>=2.0.0",
    "psutil>=5.9.0",
    "cloudpickle>=2.0.0",
    "multiprocess>=0.70.0",
    
    # Image Processing
    "opencv-python>=4.8.0",
    "scikit-image>=0.20.0",
    "scikit-learn>=1.2.0",
    "pillow>=9.0.0",
    "imagehash>=4.3.0",
    "imageio>=2.25.0",
    
    # Web and API
    "fastapi>=0.95.0",
    "uvicorn>=0.22.0",
    "flask>=2.3.0",
    "flask-cors>=4.0.0",
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "aiohttp>=3.8.0",
    
    # Utilities
    "tqdm>=4.65.0",
    "python-dotenv>=1.0.0",
    "jsonschema>=4.0.0",
    "filelock>=3.10.0",
    "tenacity>=8.0.0",
    "plotly>=5.14.0",
    "rich>=13.0.0",
    "attrs>=22.0.0",
    "protobuf>=4.0.0",
    "orjson>=3.8.0",
    "xxhash>=3.0.0",
]

[project.optional-dependencies]
ai = [
    "torch>=2.0.0",
    "tensorflow>=2.13.0",
    "transformers>=4.30.0",
    "tensorboard>=2.10.0",
    "huggingface-hub>=0.14.0",
    "langchain>=0.3.0",
    "langchain-community>=0.3.0",
    "langchain-core>=0.1.0",
    "openai>=1.0.0",
    "anthropic>=0.5.0",
    "chromadb>=0.4.0",
    "tiktoken>=0.4.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.10.0",
    "hypothesis>=6.70.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.3.0",
    "pre-commit>=3.3.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "tox>=4.5.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.23.0",
    "myst-parser>=1.0.0",
    "nbsphinx>=0.9.0",
]
all = ["lavoisier[ai,dev,docs]"]

[project.urls]
Homepage = "https://github.com/kundaisachikonye/lavoisier"
Documentation = "https://lavoisier.readthedocs.io"
Repository = "https://github.com/kundaisachikonye/lavoisier"
"Bug Tracker" = "https://github.com/kundaisachikonye/lavoisier/issues"

[project.scripts]
lavoisier = "lavoisier.cli.app:main"
lavoisier-wizard = "lavoisier.cli.ui.wizard:main"
buhera = "lavoisier.ai_modules.buhera_integration:cli_main"

[tool.setuptools]
package-dir = {"" = "."}
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["lavoisier*"]
exclude = ["tests*", "docs*", "examples*", "scripts*"]

[tool.setuptools.package-data]
lavoisier = [
    "core/config/*.json",
    "core/config/*.yaml",
    "models/data/*.json",
    "models/data/*.h5",
    "visual/templates/*.html",
    "assets/**/*",
]

[tool.setuptools-rust]
extension-modules = [
    { name = "lavoisier._core", path = "lavoisier-core/Cargo.toml" },
    { name = "lavoisier._io", path = "lavoisier-io/Cargo.toml" },
    { name = "lavoisier._buhera", path = "lavoisier-buhera/Cargo.toml" },
]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | target
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["lavoisier"]
known_third_party = ["numpy", "pandas", "scipy", "matplotlib", "sklearn"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "rdkit.*",
    "pymzml.*",
    "faiss.*",
    "ray.*",
    "dask.*",
    "cv2.*",
    "skimage.*",
    "imagehash.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = """
    -ra
    -q
    --strict-markers
    --strict-config
    --cov=lavoisier
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
"""
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
    "network: marks tests that require network access",
]

[tool.coverage.run]
source = ["lavoisier"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
    "setup_rust.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
    "target",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39,py310,py311,py312,lint,docs
isolated_build = true

[testenv]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-xdist>=3.0.0
    hypothesis>=6.70.0
commands = pytest {posargs}

[testenv:lint]
deps = 
    black>=23.3.0
    isort>=5.12.0
    flake8>=6.0.0
    mypy>=1.3.0
    bandit>=1.7.0
commands = 
    black --check lavoisier tests
    isort --check-only lavoisier tests
    flake8 lavoisier tests
    mypy lavoisier
    bandit -r lavoisier

[testenv:docs]
deps = 
    sphinx>=6.0.0
    sphinx-rtd-theme>=1.2.0
    sphinx-autodoc-typehints>=1.23.0
    myst-parser>=1.0.0
commands = sphinx-build -W -b html docs docs/_build/html
"""
